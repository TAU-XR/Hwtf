#if AR51_HtcVive
#if UNITY_EDITOR
using System.Collections;
using UnityEngine;
using ViveHandTracking;

namespace AR51.Unity.SDK.HandsAdapters
{
    /// <summary>
    /// Use the GUI generated by this class on the Game window in the Unity
    /// editor to stop the current editor play. We do this in order to bypass
    /// the editor crash caused be an active GestureProvider in the scene.
    /// </summary>
    public class ViveGestureProviderEditorGUI
        : MonoBehaviour
    {
        private bool _stopping;
        public Vector2 ButtonPosition = new Vector2(20.0f, 20.0f);
        public Vector2 ButtonSize = new Vector2(300.0f, 75.0f);

        private void OnGUI()
        {
            if (_stopping) return;
            var rect = new Rect(ButtonPosition, ButtonSize);
            if (!GUI.Button(rect, "Stop Play")) return;

            _stopping = true;
            StartCoroutine(Stop());
        }

        private IEnumerator Stop()
        {
            var provider = GetComponent<GestureProvider>();
            if (provider != null)
                provider.enabled = false;

            yield return null;
            UnityEditor.EditorApplication.ExitPlaymode();
        }

        private void Awake() => Debug.Log("Created: GestureProviderEditorGUI");
    }
}

#endif//UNITY_EDITOR
#endif//AR51_HtcVive
